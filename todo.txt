- Create the remaining entities - error reports
- Setup SQL connection - sql list or postgres
- Run EF migrations to ensure entities are created correctly
- Make a rough estimate of what will be needed for the DTOs (without looking at the frontend)
- Define our automapper
- Create the repositories for each... controller? entity? group? not sure what to map repository to
- Add unit of work pattern with the repositories
- Update the controllers to use the DTOs / Unit of work etc.
- Setup code for seeding dummy data
- Seed dummy data
- Ensure each endpoint operates as expected


--- Notes

I want to aim for only doing LINQ queries inside of the repositories, even if its a very specific
one. Just to keep things very organized and have the code self document itself a lot easier.

Worst case I can split the repositories up in some way, or standardize some of the queries
in a parent class and just use that to minmize duplicate work.

Or possibly create extension methods for the Repository class / interface (will you have to create one?)

